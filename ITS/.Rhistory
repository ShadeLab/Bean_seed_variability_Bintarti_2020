# dissimilarity indices for community ecologist to make a distance structure (Jaccard distance between samples)
bacnorm_PA <- 1*(otu.norm>0)
library(multcomp)
library(car)
library(BiocManager)
library(vegan)
library(plyr)
library(dplyr)
library(tidyverse)
library(tidyr)
library(reshape)
library(ggpubr)
library(car)
library(agricolae)
library(multcompView)
library(grid)
library(gridExtra)
library(sjmisc)
library(sjPlot)
library(MASS)
library(FSA)
library(rcompanion)
library(onewaytests)
library(ggsignif)
library(PerformanceAnalytics)
library(gvlma)
#library(cowplot)
library(ggplot2)
library(userfriendlyscience)
library(ggpmisc)
library(tibble)
library(fitdistrplus)
library(lme4)
library(nlme)
# SET THE WORKING DIRECTORY
setwd('/Users/arifinabintarti/Documents/PAPER/Bean_seed_variability_Bintarti_2020/16S')
wd <- print(getwd())
otu <- read.table('OTU_table_tax_filt.txt', sep='\t', header=T, row.names = 1)
otu
tax <- otu[,'taxonomy']
str(tax)
#write.csv(tax, file = "taxonomy.csv")
dim(otu)
otu <- otu[,-51]
dim(otu) # otu= 273, otu table still has Mock, NC, and PC in the sample
sort(rowSums(otu, na.rm = FALSE, dims = 1), decreasing = F)
#read taxonomy
taxonomy = read.csv("taxonomy.edit.csv", header=T)
rownames(taxonomy) <- rownames(otu)
dim(taxonomy)
#read the metadata
map <- read.csv("bean.var.map.csv")
#select only biological sample from otu table
otu.bac <- otu[,1:47] #unselect Mock, NC, and PC from the otu table
dim(otu.bac)
sort(rowSums(otu.bac, na.rm = FALSE, dims = 1), decreasing = F)
# remove OTUs that do not present in sample
otu.bac1=otu.bac[which(rowSums(otu.bac) > 0),]
dim(otu.bac1) # otu= 229, otu table before normalization using metagenomeSeq package and before decontamination
sort(rowSums(otu.bac1, na.rm = FALSE, dims = 1), decreasing = F)
#otu table of the negative control
otu.NC <- otu[,"NC",drop=FALSE]#only negative control
otu.NC
#install and load microDecon package
#install.packages("devtools")
#devtools::install_github("donaldtmcknight/microDecon")
library(microDecon)
#merge otu.NC to otu bac and put otu.NC as the first column
otu.NC <- rownames_to_column(otu.NC, var = "OTU.ID")
otu.bac1 <- rownames_to_column(otu.bac1, var = "OTU.ID")
otu.NC.bac <- merge(otu.NC, otu.bac1, by="OTU.ID")
dim(otu.NC.bac)
#decontamination
otu.decon <- decon(data = otu.NC.bac, numb.blanks = 1, numb.ind = 47, taxa = F)
otu.decon$OTUs.removed # remove 18 OTUs
otu.tab <- as.data.frame(otu.decon$decon.table)
#remove NC from the otu.dec.table
otu.tab <- otu.tab[,c(1,3:49)]
dim(otu.tab) #there are 211 otus and 47 samples
#merge otu.dec.table with taxonomy to have match taxonomy table
taxonomy <- rownames_to_column(taxonomy, var = "OTU.ID")
otu.tab.tax <- merge(otu.tab, taxonomy, by = "OTU.ID")
otu.tab.tax
#separate the otu table and taxonomy table
#otu table
decon.otu <- data.frame(otu.tab.tax[,c(1:48)])
dim(decon.otu) #211 otus, 47samples
tax <- data.frame(otu.tab.tax[,c(1,49:55)], row.names = 1)
dim(tax) #211 otus, 7columns/levels
decon.otu <- column_to_rownames(decon.otu, var = "OTU.ID")
sort(colSums(decon.otu, na.rm = FALSE, dims = 1), decreasing = F)
sort(rowSums(decon.otu, na.rm = FALSE, dims = 1), decreasing = F)
#install and load metagenomeSeq package
#BiocManager::install("metagenomeSeq", dependencies=TRUE)
library(metagenomeSeq)
#loading count data (otu)
decon.otu
#loading metadata
map <- read.csv("bean.var.map.csv")
map <- column_to_rownames(map, var="Sample.id")
#create MRexperiment object
phenotypeData <- AnnotatedDataFrame(map)
phenotypeData
OTUdata <- AnnotatedDataFrame(tax)
OTUdata
#create model
model <- newMRexperiment(decon.otu, phenoData = phenotypeData, featureData = OTUdata)
model
sort(rowSums(MRcounts(model), na.rm = FALSE, dims = 1), decreasing = T)
p <- cumNormStatFast(model, pFlag = T)
bac.norm <- cumNorm(model, p = p)
bac.norm
#export count matrix
otu.norm <- MRcounts(bac.norm, norm = TRUE, log = F)
otu.norm <- as.data.frame(otu.norm)
head(sort(colSums(otu.norm, na.rm = FALSE, dims = 1), decreasing = FALSE))
head(sort(rowSums(otu.norm, na.rm = FALSE, dims = 1), decreasing = FALSE))
otu.norm <- rownames_to_column(otu.norm, var="OTU.ID")
#write.table(otu.norm, "otu_norm.txt", sep = "\t", quote = F, row.names = F)
dim(otu.norm) #there are 211 otus and 47 samples
library(phyloseq)
decon.otu # decontaminated non-normalized OTU table
map_16S <- bean.map[bean.map$sample.id%in%colnames(decon.otu),]
curve_colors <- rep("darkgreen", ncol(decon.otu))
map_16S <- bean.map[bean.map$Sample.id%in%colnames(decon.otu),]
bean.map <- map
map_16S <- bean.map[bean.map$Sample.id%in%colnames(decon.otu),]
curve_colors <- rep("darkgreen", ncol(decon.otu))
curve_colors[map_16S$plant=="A"] <- "#440154FF"
curve_colors[map_16S$plant=="B"] <- "#1F968BFF"
curve_colors[map_16S$plant=="C"] <- "#FDE725FF"
lty <- c("solid", "solid", "solid")
# load normalized otu table
otu.norm
head(otu.norm)
# bacterial taxonomy
head(tax)
#tax <- column_to_rownames(tax, var = "OTU.ID")
rownames(tax) <- rownames(otu.norm)
# make phyloseq otu table and taxonomy
otu.phyl = otu_table(otu.norm, taxa_are_rows = TRUE)
tax.phyl = tax_table(as.matrix(tax))
# load normalized otu table
otu.norm
head(otu.norm)
otu.norm <- column_to_rownames(otu.norm, var = "OTU.ID")
# bacterial taxonomy
head(tax)
#tax <- column_to_rownames(tax, var = "OTU.ID")
rownames(tax) <- rownames(otu.norm)
# make phyloseq otu table and taxonomy
otu.phyl = otu_table(otu.norm, taxa_are_rows = TRUE)
tax.phyl = tax_table(as.matrix(tax))
# make phyloseq map
rownames(bean.map) <- bean.map$Sample.id
map.phyl <- sample_data(bean.map)
phyl.obj <- merge_phyloseq(otu.phyl,tax.phyl,map.phyl)
View(bean.map)
View(map)
View(map)
bean.map <- map
View(bean.map)
bean.map <- column_to_rownames(map, var="Sample.id")
bean.map <- rownames_to_column(map, var="Sample.id")
map_16S <- bean.map[bean.map$Sample.id%in%colnames(decon.otu),]
curve_colors <- rep("darkgreen", ncol(decon.otu))
curve_colors[map_16S$plant=="A"] <- "#440154FF"
curve_colors[map_16S$plant=="B"] <- "#1F968BFF"
curve_colors[map_16S$plant=="C"] <- "#FDE725FF"
lty <- c("solid", "solid", "solid")
rarecurve(t(decon.otu), step=1, label=F, col = curve_colors, lty=lty, lwd=2, xlab = "Reads",
ylab = "Bacterial/archaeal OTUs", font.lab=2, main="A")
View(map_16S)
curve_colors <- rep("darkgreen", ncol(decon.otu))
curve_colors[map_16S$plant=="A"] <- "#440154FF"
curve_colors[map_16S$plant=="B"] <- "#1F968BFF"
curve_colors[map_16S$plant=="C"] <- "#FDE725FF"
lty <- c("solid", "solid", "solid")
rarecurve(t(decon.otu), step=1, label=F, col = curve_colors, lty=lty, lwd=2, xlab = "Reads",
ylab = "Bacterial/archaeal OTUs", font.lab=2, main="A")
View(curve_colors)
ncol(decon.otu)
curve_colors <- rep("darkgreen", ncol(decon.otu))
# SET THE WORKING DIRECTORY
setwd('/Users/arifinabintarti/Documents/PAPER/Bean_seed_variability_Bintarti_2020/ITS/')
wd <- print(getwd())
otu.its <- read.table('otu_table_ITS_UPARSE.txt', sep='\t', header=T, row.names = 1)
dim(otu.its) ## total otu= 87, otu table still has Mock, NC, and PC in the sample
#select only biological sample from otu table
otu.its.unfil <- otu.its[,1:46] #unselect Mock, NC, and PC from the otu table
dim(otu.its.unfil)
otu.its.unfil <- column_to_rownames(otu.its.unfil, var = "OTUid")
sort(rowSums(otu.its.unfil, na.rm = FALSE, dims = 1), decreasing = F)
# remove OTUs that do not present in sample
otu.its1.unfil=otu.its.unfil[which(rowSums(otu.its.unfil) > 0),]
dim(otu.its) ## total otu= 87, otu table still has Mock, NC, and PC in the sample
View(otu.its)
#select only biological sample from otu table
otu.its.unfil <- otu.its[,1:46] #unselect Mock, NC, and PC from the otu table
dim(otu.its.unfil)
View(otu.its.unfil)
#select only biological sample from otu table
otu.its.unfil <- otu.its[,1:45] #unselect Mock, NC, and PC from the otu table
dim(otu.its.unfil)
View(otu.its.unfil)
View(otu.its.unfil)
View(otu.its.unfil)
#otu.its.unfil <- column_to_rownames(otu.its.unfil, var = "OTUid")
sort(rowSums(otu.its.unfil, na.rm = FALSE, dims = 1), decreasing = F)
# remove OTUs that do not present in sample
otu.its1.unfil=otu.its.unfil[which(rowSums(otu.its.unfil) > 0),]
dim(otu.its1.unfil) # otu= 76
sort(rowSums(otu.its1.unfil, na.rm = FALSE, dims = 1), decreasing = F)
#read taxonomy
taxonomy.its = read.csv("ITSotu_taxonomy_RDP.csv", header=T)
dim(taxonomy.its) #83 otus, still contains plantae taxa and contaminant microbial taxa
#read the metadata
map.its <- read.csv("bean.var.map.its.csv")
#merge 'otu.its' with 'taxonomy.its' to have match otu and taxonomy table
otu.its1.unfil <- rownames_to_column(otu.its1.unfil, var = "OTUid")
otu.tax.its <- merge(otu.its1.unfil,taxonomy.its, by = "OTUid")
dim(otu.tax.its) #72 fungal otus before plant and microbial contaminants removal
#filter out the plantae taxa from the 'otu.tax.its' table
otu.fil <- filter(otu.tax.its, Kingdom != "Plantae")
dim(otu.fil) #59 otus, filter out 13 plantae taxa
#separate the otu table and taxonomy table
otu.tab <- data.frame(otu.fil[,c(1:46)])
dim(otu.tab)# 59otus,
tax.tab <- data.frame(otu.fil[,c(1,47:53)])
dim(tax.tab)
View(otu.tab)
#fungal otu
otu.fg1 <- column_to_rownames(otu.tab, var = "OTUid")
sort(rowSums(otu.fg1, na.rm = FALSE, dims = 1), decreasing = F)
dim(otu.fg1) #59 plant filtered otus; otu table before normalization using metagenomeSeq package and before decontamination
View(otu.its)
#otu table of the negative control
#otu.its <- column_to_rownames(otu.its, var = "OTUid")
otu.its.NC <- otu.its[,"NC",drop=FALSE]#only negative control
otu.its.NC
head(otu.fg1)
#merge otu.NC to otu bac and put otu.NC as the first column
otu.its.NC <- rownames_to_column(otu.its.NC, var = "OTUid")
otu.fg1 <- rownames_to_column(otu.fg1, var = "OTUid")
otu.fg1.NC <- merge(otu.its.NC, otu.fg1, by="OTUid")
otu.fg1.NC
dim(otu.fg1.NC)
#decontamination
otu.its.decon <- decon(data = otu.fg1.NC, numb.blanks = 1, numb.ind = 45, taxa = F)
otu.its.decon$OTUs.removed # remove 2 OTUs (OTU_2 and OTU_3)
otu.its.dec.table <- as.data.frame(otu.its.decon$decon.table)
dim(otu.its.dec.table) # otu = 57
#remove NC from the otu.dec.table
otu.its.dec.table <- otu.its.dec.table[,c(1,3:47)]
otu.its.dec.table
dim(otu.its.dec.table) #there are 57 otus and 45 samples
View(tax.tab)
head(tax.tab)
head(otu.its.dec.table)
#merge 'otu.its.dec.table' with 'tax.tab' to have match otu and taxonomy table
#tax.tab <- rownames_to_column(tax.tab, var = "OTUid")
otu.tax.fil <- merge(otu.its.dec.table,tax.tab, by = "OTUid")
dim(otu.tax.fil) #57 otus
head(otu.tax.fil)
#separate the taxonomy from the otu table
otu.tax.fil <- column_to_rownames(otu.tax.fil, var = "OTUid")
otu.fil <- data.frame(otu.tax.fil[,c(1:45)])
tax.fil <- data.frame(otu.tax.fil[,c(46:52)])
head(otu.fil)
head(tax.fil)
############# Reads normalization using metagnomeSeq ####################
library(metagenomeSeq)
#Creating a MRexperiment object
head(otu.its.dec.table) #make sure you have "OTUid" as the first column
dim(otu.its.dec.table) # 57 OTUs
#load count data (otu.dec.its)
otu.dec.its <- loadMeta("otu.its.dec.table.txt", sep = "\t")
otu.dec.its$counts
dim(otu.dec.its$counts) #[1] 57 45
#load taxonomy
tax.fil.edited = read.csv("tax.fil.edited.csv", sep=',', header=T)
#write.table(tax.fil.edited, file = "tax.fil.edited.txt", col.names = TRUE, row.names = F, quote = FALSE, sep = "\t")
#loading taxonomy table
tax.dec.its <- read.delim("tax.fil.edited.txt", stringsAsFactors = FALSE, sep = "\t")
tax.dec.its <- tax.dec.its %>%
remove_rownames() %>%
column_to_rownames(var = 'OTUid')
dim(tax.dec.its) #[1] 57 otus  7
#loading metadata
its.map <- read.csv("bean.var.map.its.csv")
#write.table(its.map, file = "bean.var.map.its.txt",col.names = TRUE, row.names = F, quote = FALSE, sep = "\t")
meta.its <- loadPhenoData("bean.var.map.its.txt", sep="\t",tran = TRUE)
meta.its
#create one MRexperiment object
phenotypeData <- AnnotatedDataFrame(meta.its)
phenotypeData
OTUdata <- AnnotatedDataFrame(tax.dec.its)
OTUdata
#create model
fg.data <- newMRexperiment(otu.dec.its$counts, phenoData = phenotypeData, featureData = OTUdata)
fg.data
#cumNormStatFast=Calculates the percentile for which to sum counts up to and scale by.
p <- cumNormStat(fg.data)
p
#cumNorm=Calculates each column’s quantile and calculates the sum up to and including that quantile.
fg.data.norm <- cumNorm(fg.data, p = p)
fg.data.norm
#export count matrix
fgnorm <- MRcounts(fg.data.norm, norm = TRUE, log = F)
fgnorm <- as.data.frame(fgnorm)
fgnorm
head(sort(colSums(fgnorm, na.rm = FALSE, dims = 1), decreasing = FALSE))
head(sort(rowSums(fgnorm, na.rm = FALSE, dims = 1), decreasing = FALSE))
#write.table(fgnorm, "normalised_logged_fg_otu.txt", sep = "\t", quote = F)
dim(fgnorm) #there are 57 otus and 45 samples
library(phyloseq)
library(graphics)
View(its.map)
its.map.rare <- its.map[its.map$Sample.id%in%colnames(otu.fil),]
View(its.map.rare)
curve_colors <- rep("darkgreen", ncol(otu.fil))
curve_colors[its.map.rare$Plant=="A"] <- "#440154FF"
curve_colors[its.map.rare$Plant=="B"] <- "#1F968BFF"
curve_colors[its.map.rare$Plant=="C"] <- "#FDE725FF"
lty <- c("solid", "solid", "solid")
curve_colors
rarecurve(t(otu.fil), step=1, label=F, col = curve_colors, lty=lty, lwd=2, xlab = "Reads",
ylab = "Fungal OTUs", main="A", adj=0)
View(taxonomy)
View(taxonomy)
View(bean.map)
View(its.map)
wd <- print(getwd())
dim(taxonomy.its) #83 otus, still contains plantae taxa and contaminant microbial taxa
View(taxonomy.its)
